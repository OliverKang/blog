<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Oliver Kang (設計原則)</title><link>http://getnikola.com/</link><description></description><atom:link href="http://getnikola.com/categories/she-ji-yuan-ze.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Thu, 20 Feb 2014 20:02:09 GMT</lastBuildDate><generator>Nikola &lt;http://getnikola.com/&gt;</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>去除循環相依性</title><link>http://getnikola.com/posts/acyclic-dependency-principle.html</link><description>&lt;div&gt;&lt;p&gt;-模組間依賴關係應維持單向相依，若出現循環相依，會造成系統編譯建置上的困難。&lt;/p&gt;
&lt;p&gt;如下圖，Ｄ是Ｂ的底層，Ｂ是Ａ和Ｃ的底層，Ｃ是Ａ的底層。底層若變動，依賴於它的模組可能要隨著調整並重新編譯。因此當Ｄ變動則調整Ａ、Ｂ、Ｃ並全部重新編譯; 當Ｃ異動，則只有Ａ受影響需要重新編譯; 如果只有Ａ異動，那很好，沒有模組受影響，只要編譯Ａ就好。如此，我們限縮了異動影響範圍。&lt;/p&gt;
&lt;img alt="/img/img_adp_acycle0.png" src="http://getnikola.com/img/img_adp_acycle0.png"&gt;
&lt;p class="more"&gt;&lt;a href="http://getnikola.com/posts/acyclic-dependency-principle.html"&gt; (繼續閱讀...) &lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>物件導向</category><category>設計原則</category><guid>http://getnikola.com/posts/acyclic-dependency-principle.html</guid><pubDate>Sat, 08 Feb 2014 22:13:00 GMT</pubDate></item><item><title>依賴"反轉"，反轉了什麼？</title><link>http://getnikola.com/posts/what-does-the-dependency-inversion-principle-inverse.html</link><description>&lt;div&gt;&lt;p&gt;依賴反轉是物件導向原則之一，維基 &lt;a class="footnote-reference" href="http://getnikola.com/posts/what-does-the-dependency-inversion-principle-inverse.html#id2" id="id1"&gt;[1]&lt;/a&gt; 上說這個原則有兩項要求：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;高層次的模組不應該依賴於低層次的模組，兩者都應該依賴於抽象介面。&lt;em&gt;(High level modules should not depend upon low level modules. Both should depend upon abstractions.)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;抽象介面不應該依賴於具體實現。而具體實現則應該依賴於抽象介面。&lt;em&gt;(Abstractions should not depend upon details. Details should depend upon abstractions.)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;只是...究竟是什麼東西被“&lt;strong&gt;反轉&lt;/strong&gt;”了？&lt;/p&gt;
&lt;p class="more"&gt;&lt;a href="http://getnikola.com/posts/what-does-the-dependency-inversion-principle-inverse.html"&gt; (繼續閱讀...) &lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>物件導向</category><category>設計原則</category><guid>http://getnikola.com/posts/what-does-the-dependency-inversion-principle-inverse.html</guid><pubDate>Fri, 07 Feb 2014 23:34:30 GMT</pubDate></item></channel></rss>